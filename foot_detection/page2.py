# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'page2.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from SQL import view_patient_info, search_line
from PyQt5 import QtCore, QtGui, QtWidgets
from SQL import view_edema_info



class Ui_Form(object):
    def __init__(self):
        super().__init__()
        self.patient_id = None

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1088, 613)
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.lineEdit = QtWidgets.QLineEdit(Form)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout.addWidget(self.lineEdit)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("source/img/Search.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setIcon(icon)
        self.pushButton.setIconSize(QtCore.QSize(20, 20))
        self.pushButton.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton.sizePolicy().hasHeightForWidth())
        self.pushButton.setSizePolicy(sizePolicy)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.tableView = QtWidgets.QTableView(Form)
        self.tableView.setObjectName("tableView")
        self.verticalLayout.addWidget(self.tableView)
        # 初始化 QStandardItemModel
        self.model = QtGui.QStandardItemModel()
        self.model.setHorizontalHeaderLabels(["等級", "病患_ID", "名字", "性別", "身高", "病患_LineID"])  # 設置表頭
        
        # 設置模型到 tableView
        self.tableView.setModel(self.model)
        self.tableView.doubleClicked.connect(self.table_double_click)
        # 設置只能選擇整行
        self.tableView.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableView.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)

        # 添加測試數據
        self.add_table_data()

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def add_table_data(self):
        # 新增資料到表格
        data = view_patient_info()

        for row in data:
            items = []
            for i, item in enumerate(row):  # 使用 enumerate 來獲取索引和元素
                table_item = QtGui.QStandardItem(str(item))
                table_item.setFlags(QtCore.Qt.ItemIsEnabled | QtCore.Qt.ItemIsSelectable)  # 設置為不可編輯
                
                if i == 0:  # 檢查等級 (第一欄)
                    if item == "A":
                        table_item.setBackground(QtGui.QColor(255, 0, 0))  # 紅色
                    elif item == "B":
                        table_item.setBackground(QtGui.QColor(255, 165, 0))  # 橙色
                    elif item == "C":
                        table_item.setBackground(QtGui.QColor(0, 255, 0))  # 綠色
                items.append(table_item)
            self.model.appendRow(items)
        self.gridLayout.addLayout(self.verticalLayout, 0, 0, 1, 1)

    def add_table_data_2(self):
        print('add table data')
        self.tableView.setModel(self.model)
        patient_id = str(self.get_patient_id())
        print(patient_id)
        data = view_edema_info(patient_id)
        for row in data:
            items = []
            for item in row:
                table_item = QtGui.QStandardItem(str(item))
                table_item.setFlags(QtCore.Qt.ItemIsEnabled | QtCore.Qt.ItemIsSelectable)  # 設置為不可編輯
                items.append(table_item)
            self.model.appendRow(items)
        self.model.layoutChanged.emit()

    def table_double_click(self, index):
        self.row = index.row()
        model = index.model()
        self.row_data = []
        for column in range(model.columnCount()):
            data = model.data(model.index(self.row, column))
            self.row_data.append(data)
        self.patient_id = self.row_data[1]
        get_data = self.get_patient_id()

        return get_data

    def get_patient_id(self):
        patient_id = self.patient_id
        return patient_id

    def search_buttob_clicked(self):
        search = self.lineEdit.text()
        data = search_line(search)

         # 清空現有的 tableView 資料
        self.model.clear()
        self.model.setHorizontalHeaderLabels(["等級", "病患_ID", "名字", "性別", "身高", "病患_LineID"])

        # 添加新的資料到 tableView
        for row in data:
            items = []
            for i, item in enumerate(row):  # 使用 enumerate 來獲取索引和元素
                table_item = QtGui.QStandardItem(str(item))
                table_item.setFlags(QtCore.Qt.ItemIsEnabled | QtCore.Qt.ItemIsSelectable)  # 設置為不可編輯
                
                if i == 0:  # 檢查等級 (第一欄)
                    if item == "A":
                        table_item.setBackground(QtGui.QColor(255, 0, 0))  # 紅色
                    elif item == "B":
                        table_item.setBackground(QtGui.QColor(255, 165, 0))  # 橙色
                    elif item == "C":
                        table_item.setBackground(QtGui.QColor(0, 255, 0))  # 綠色
                items.append(table_item)
            self.model.appendRow(items)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.lineEdit.setPlaceholderText("搜尋...")